#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

&mt {
    quick-tap-ms = <100>;
    global-quick-tap;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };

        okl: outer_key_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "OUTER_KEY_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <150>;
            flavor = "balanced";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
            &kp Q        &kp W       &kp E       &kp R        &kp T           &kp Y         &kp U        &kp I       &kp O       &kp P
            &hm LCTRL A  &hm LALT S  &hm LGUI D  &hm LSHFT F  &okl 2 G        &okl 2 H      &hm RSHFT J  &hm RGUI K  &hm RALT L  &hm RCTRL SEMI
&okl 1 ESC  &okl 3 Z     &kp X       &kp C       &kp V        &kp B           &kp N         &kp M        &kp COMMA   &kp DOT     &okl 3 FSLH     &okl 1 SQT
                                     &kp TAB     &kp BSPC     &okl 1 SPACE    &okl 2 SPACE  &kp ENTER    &kp RCMD
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
                 &kp SCROLLLOCK  &trans     &kp UP    &kp EQUAL  &kp LBRC    &kp RBRC  &kp N7  &kp N8      &kp N9  &kp KP_PLUS
                 &kp INSERT      &kp LEFT   &kp DOWN  &kp RIGHT  &kp LBKT    &kp RBKT  &kp N4  &kp N5      &kp N6  &kp KP_MINUS
&kp PRINTSCREEN  &kp DEL         &kp PG_UP  &kp CAPS  &kp PG_DN  &kp LPAR    &kp RPAR  &kp N1  &kp N2      &kp N3  &kp KP_MULTIPLY  &kp KP_DIVIDE
                                            &trans    &trans     &trans      &mo 3     &kp N0  &kp KP_DOT
            >;
        };

        sim_layer {
            label = "SYM";
            bindings = <
        &kp EXCL       &kp AT     &kp HASH           &kp DLLR          &kp PRCNT        &kp CARET  &kp AMPS          &kp STAR    &kp QUESTION  &kp SINGLE_QUOTE
        &kp PLUS       &kp EQUAL  &kp LBRC           &kp RBRC          &kp DQT          &kp COLON  &kp LBKT          &kp RBKT    &kp LPAR      &kp RPAR
&trans  &kp LESS_THAN  &kp PIPE   &kp MINUS          &kp GREATER_THAN  &kp BACKSLASH    &kp GRAVE  &kp UNDERSCORE    &kp SLASH   &kp TILDE     &kp SEMICOLON     &trans
                                  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &mo 3            &trans     &kp C_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        adjust_layer {
            label = "ADJ";
            bindings = <
        &sys_reset  &bt BT_PRV  &bt BT_NXT  &bt BT_CLR  &out OUT_TOG    &bt BT_SEL 0  &kp F7  &kp F8  &kp F9  &sys_reset
        &trans      &trans      &trans      &trans      &trans          &bt BT_SEL 1  &kp F4  &kp F5  &kp F6  &trans
&trans  &trans      &trans      &trans      &trans      &trans          &bt BT_SEL 2  &kp F1  &kp F2  &kp F3  &trans      &trans
                                &trans      &trans      &trans          &trans        &trans  &trans
            >;
        };
    };
};
